<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

       echo time=`date +%m-%d-%Y\ %H:%M:%S`
       select unix_timestamp('05-24-2017 14:34:59', 'MM-dd-yyyy HH:mm:ss');
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<workflow-app xmlns="uri:oozie:workflow:0.2" name="sqoop-qi-assessments-init-load-wf">
    <start to="hive-schema-node"/>
    <action name="hive-schema-node">
        <hive xmlns="uri:oozie:hive-action:0.2">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <prepare></prepare>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <script>
                schemas.q
            </script>
            
        </hive>
        <ok to="shell-runtime-node"/>
        <error to="fail"/>
    </action>

    <action name="shell-runtime-node">
       <shell xmlns="uri:oozie:shell-action:0.2">
           <job-tracker>${jobTracker}</job-tracker>
           <name-node>${nameNode}</name-node>
           <configuration>
               <property>
                   <name>mapred.job.queue.name</name>
                   <value>${queueName}</value>
               </property>
           </configuration>
           <exec>echo</exec>
           <argument>currentTime=`date +%m-%d-%Y\ %H:%M:%S`</argument>
           <capture-output/>
       </shell>
       <ok to="sqoop-qi-init-load-node"/>
       <error to="fail"/>
   </action>


    <action name="sqoop-qi-init-load-node">

        <sqoop xmlns="uri:oozie:sqoop-action:0.2">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <prepare>
            </prepare>

            <configuration>

                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <arg>import</arg>
            <arg>--connect</arg>
            <arg>${jdbcUrl}</arg>
            <arg>--username</arg>
            <arg>${jdbcUser}</arg>
            <arg>--password</arg>
            <arg>${jdbcPassword}</arg>
            <arg>--verbose</arg>
            <arg>--query</arg>
            <arg>
            select 
  ast.ID assessment_subtest_id, 
  ast.ASSESSMENT_ID assessment_id, 
  ast.COMPLETION_TIME,
  ast.SUBTEST_ID,
  ast.TEST_ID, 
  ast.DATE_WE_SET_START_TIME started_date, 
  to_char(ast.DATE_WE_SET_START_TIME,'MM-dd-YYYY hh24:mi:ss') last_updated ,
  ast.DATE_CREATED, 
  ast.MODIFIED_BY,
  ast.LICENSE_ID,
  ast.USAGE,
  ast.APPLIED_PAYMENT_METHOD,
  p.identifier client_identifier,
  CAST (
        CASE ASMT.IS_CLONE
        WHEN 1 THEN 0
        ELSE (
        CASE ASMT.PRACTICE_MODE
        WHEN 1 THEN 0
        ELSE
        NVL((GET_LATEST_PRICE(ast.SUBTEST_ID,AST.DATE_WE_SET_START_TIME,be.PARENT_ID)),0)
        END
        )
        END
        AS NUMBER(19,2)) AS CHARGE_AMOUNT,

    CAST ( CASE WHEN ASMT.IS_CLONE = 1 THEN 0 ELSE nvl(AST.USAGE, 0) END AS NUMBER(19,2)) as UNIT_WEIGHT,
    (
            SELECT
              ISBN.ISBN
            FROM
              SUBTEST_ISBN ISBN,
              BUSINESS_UNIT_SUBTEST BUST3
            WHERE
              ROWNUM = 1 AND
               BUST3.SUBTEST_ID = ast.SUBTEST_ID AND
               BUST3.BUSINESS_UNIT_ID = be.PARENT_ID AND
               ISBN.BUSINESS_UNIT_SUBTEST_ID = BUST3.ID AND
               ISBN.END_TIME IS NULL
        ) AS ISBN,
        ASMT.PRACTICE_MODE AS IS_PRACTICE,
        ASMT.IS_CLONE AS IS_CLONE,
        CASE ASMT.IS_CLONE WHEN 1 THEN 0 ELSE 1 END AS QTY,
   AST.APPLIED_PAYMENT_METHOD AS PAYMENT_METHOD,
  ASMT.CREATOR_ID,
  ASMT.PATIENT_ID,
  ASMT.TITLE,
  ASMT.ASSESSMENT_TYPE,
  LICTYPE.NAME LICENSE_TYPE_NAME,
   BELIC.NAME LICENSE_NAME,
  BELIC.PREPAY_USAGE LICENSE_PREPAY_USAGE,
   BELIC.CURRENT_USAGE LICENSE_CURRENT_USAGE,
  ASDATA.KEY as PAPER_FLAG,
  TRUNC(BELIC.START_BILLING_DATE) as LICENSE_START_BILLING_DATE,
  TRUNC(BELIC.EXPIRATION_DATE) as LICENSE_EXPIRATION_DATE

from 
  assessment_subtest ast, 
  assessment asmt,
   business_entity be, pearson_user pu,
   patient p,
  BUSINESS_ENTITY_LICENSE BELIC ,
  LICENSE_TYPE LICTYPE,
      ( select ASSESSMENT_SUBTEST_ID, KEY, VALUE from ASSESSMENT_SUBTEST_DATA  where
              KEY = 'PAPER'
            )  ASDATA

where 
  asmt.id =ast.assessment_id and
  ast.was_started = 1 and
  asmt.creator_id = pu.id and pu.entity_id = be.id and
  asmt.patient_id = p.id and
  AST.LICENSE_ID = BELIC.ID and
  BELIC.LICENSE_TYPE_ID = LICTYPE.ID and
  AST.ID = ASDATA.ASSESSMENT_SUBTEST_ID(+) and 
             $CONDITIONS</arg>
            <arg>--target-dir</arg>
            <arg>${nameNode}/user/${hiveTableLocation}/assessments_base</arg>
            <arg>-m</arg>
            <arg>1</arg>
             <arg>--split-by</arg>
            <arg>be.id</arg>           
            <arg>--as-textfile</arg>
            <arg>--hive-import</arg>
            <arg>--hive-database</arg>
            <arg>qi_src</arg>
            <arg>--hive-table</arg>
            <arg>ASSESSMENTS_BASE</arg>
            <file>/user/merrill/share/conf/hive-site.xml#hive-site.xml</file>
        </sqoop>
       

        <ok to="hive-incrementals-node"/>
        <error to="fail"/>
    </action>


    <action name="hive-incrementals-node">
        <hive xmlns="uri:oozie:hive-action:0.2">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <prepare></prepare>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <script>
                incrementals.q
            </script>
            
        </hive>
        <ok to="hive-incrementals-view-node"/>
        <error to="fail"/>
    </action>

     <action name="hive-incrementals-view-node">
        <hive xmlns="uri:oozie:hive-action:0.2">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <prepare></prepare>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <script>
                incrementals_view.q
            </script>
            
        </hive>
        <ok to="hive-report-node"/>
        <error to="fail"/>
    </action>

    <action name="hive-report-node">
        <hive xmlns="uri:oozie:hive-action:0.2">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <prepare></prepare>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <script>
                report.q
            </script>
            
        </hive>
        <ok to="end"/>
        <error to="fail"/>
    </action>

    <kill name="fail">
        <message>Sqoop qi failed, error message[${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>
    <end name="end"/>

</workflow-app>
